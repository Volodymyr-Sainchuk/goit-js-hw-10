{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nlet userSelectedDate = null;\nlet timerId = null;\nconst btn = document.querySelector('button');\nconst dateInput = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log('here', Number(new Date(selectedDates[0])));\n    userSelectedDate = Number(new Date(selectedDates[0]));\n    const today = Date.now();\n    console.log(today);\n    if (userSelectedDate <= today) {\n      window.alert('Please choose a date in the future');\n      btn.disabled = true;\n    } else {\n      btn.disabled = false;\n    }\n  },\n};\nbtn.addEventListener('click', () => {\n  if (!userSelectedDate) {\n    return;\n  }\n  btn.disabled = true;\n  dateInput.disabled = true;\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      return;\n    }\n    updateTimer(timeLeft);\n  }, 1000);\n});\nflatpickr('#datetime-picker', options);\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","timerId","btn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","options","selectedDates","today","timeLeft","updateTimer","flatpickr","addLeadingZero","value","ms","days","hours","minutes","seconds","convertMs"],"mappings":"wIAEA,IAAIA,EAAmB,KACnBC,EAAU,KACd,MAAMC,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAI,OAAQ,OAAO,IAAI,KAAKA,EAAc,CAAC,CAAC,CAAC,CAAC,EACtDT,EAAmB,OAAO,IAAI,KAAKS,EAAc,CAAC,CAAC,CAAC,EACpD,MAAMC,EAAQ,KAAK,MACnB,QAAQ,IAAIA,CAAK,EACbV,GAAoBU,GACtB,OAAO,MAAM,oCAAoC,EACjDR,EAAI,SAAW,IAEfA,EAAI,SAAW,EAElB,CACH,EACAA,EAAI,iBAAiB,QAAS,IAAM,CAC7BF,IAGLE,EAAI,SAAW,GACfC,EAAU,SAAW,GACrBF,EAAU,YAAY,IAAM,CAE1B,MAAMU,EAAWX,EADL,IAAI,KAGhB,GAAIW,GAAY,EAAG,CACjB,cAAcV,CAAO,EACrBW,EAAY,CAAC,EACb,MACD,CACDA,EAAYD,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC,EACDE,EAAU,mBAAoBL,CAAO,EACrC,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASH,EAAYI,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDZ,EAAO,YAAcU,EAAeG,CAAI,EACxCZ,EAAQ,YAAcS,EAAeI,CAAK,EAC1CZ,EAAU,YAAcQ,EAAeK,CAAO,EAC9CZ,EAAU,YAAcO,EAAeM,CAAO,CAChD,CACA,SAASC,EAAUL,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}